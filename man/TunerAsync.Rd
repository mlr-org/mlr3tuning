% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TunerAsync.R
\name{TunerAsync}
\alias{TunerAsync}
\title{Class for Tuning Algorithms}
\description{
The \link{TunerAsync} implements the asynchronous optimization algorithm.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
Identifier of the object.
Used in tables, plot and text output.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{param_set}}{(\link[paradox:ParamSet]{paradox::ParamSet})\cr
Set of control parameters.}

\item{\code{param_classes}}{(\code{character()})\cr
Supported parameter classes for learner hyperparameters that the tuner can optimize.
Subclasses of \link[paradox:Param]{paradox::Param}.}

\item{\code{properties}}{(\code{character()})\cr
Set of properties of the tuner.
Must be a subset of \code{\link[mlr3:mlr_reflections]{mlr_reflections$tuner_properties}}.}

\item{\code{packages}}{(\code{character()})\cr
Set of required packages.
Note that these packages will be loaded via \code{\link[=requireNamespace]{requireNamespace()}}, and are not attached.}

\item{\code{label}}{(\code{character(1)})\cr
Label for this object.
Can be used in tables, plot and text output instead of the ID.}

\item{\code{man}}{(\code{character(1)})\cr
String in the format \verb{[pkg]::[topic]} pointing to a manual page for this object.
The referenced help package can be opened via method \verb{$help()}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TunerAsync-new}{\code{TunerAsync$new()}}
\item \href{#method-TunerAsync-format}{\code{TunerAsync$format()}}
\item \href{#method-TunerAsync-print}{\code{TunerAsync$print()}}
\item \href{#method-TunerAsync-help}{\code{TunerAsync$help()}}
\item \href{#method-TunerAsync-optimize}{\code{TunerAsync$optimize()}}
\item \href{#method-TunerAsync-clone}{\code{TunerAsync$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerAsync-new"></a>}}
\if{latex}{\out{\hypertarget{method-TunerAsync-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerAsync$new(
  id = "tuner",
  param_set,
  param_classes,
  properties,
  packages = character(),
  label = NA_character_,
  man = NA_character_
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character(1)})\cr
Identifier for the new instance.}

\item{\code{param_set}}{(\link[paradox:ParamSet]{paradox::ParamSet})\cr
Set of control parameters.}

\item{\code{param_classes}}{(\code{character()})\cr
Supported parameter classes for learner hyperparameters that the tuner can optimize.
Subclasses of \link[paradox:Param]{paradox::Param}.}

\item{\code{properties}}{(\code{character()})\cr
Set of properties of the tuner.
Must be a subset of \code{\link[mlr3:mlr_reflections]{mlr_reflections$tuner_properties}}.}

\item{\code{packages}}{(\code{character()})\cr
Set of required packages.
Note that these packages will be loaded via \code{\link[=requireNamespace]{requireNamespace()}}, and are not attached.}

\item{\code{label}}{(\code{character(1)})\cr
Label for this object.
Can be used in tables, plot and text output instead of the ID.}

\item{\code{man}}{(\code{character(1)})\cr
String in the format \verb{[pkg]::[topic]} pointing to a manual page for this object.
The referenced help package can be opened via method \verb{$help()}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerAsync-format"></a>}}
\if{latex}{\out{\hypertarget{method-TunerAsync-format}{}}}
\subsection{Method \code{format()}}{
Helper for print outputs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerAsync$format(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(ignored).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{character()}).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerAsync-print"></a>}}
\if{latex}{\out{\hypertarget{method-TunerAsync-print}{}}}
\subsection{Method \code{print()}}{
Print method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerAsync$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character()}).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerAsync-help"></a>}}
\if{latex}{\out{\hypertarget{method-TunerAsync-help}{}}}
\subsection{Method \code{help()}}{
Opens the corresponding help page referenced by field \verb{$man}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerAsync$help()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerAsync-optimize"></a>}}
\if{latex}{\out{\hypertarget{method-TunerAsync-optimize}{}}}
\subsection{Method \code{optimize()}}{
Performs the tuning on a \link{TuningInstanceAsyncSingleCrit} or \link{TuningInstanceAsyncMultiCrit} until termination.
The single evaluations will be written into the \link{ArchiveAsyncTuning} that resides in the \link{TuningInstanceAsyncSingleCrit}/\link{TuningInstanceAsyncMultiCrit}.
The result will be written into the instance object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerAsync$optimize(inst)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inst}}{(\link{TuningInstanceAsyncSingleCrit}| \link{TuningInstanceAsyncMultiCrit}).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{\link[data.table:data.table]{data.table::data.table()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TunerAsync-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TunerAsync-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TunerAsync$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

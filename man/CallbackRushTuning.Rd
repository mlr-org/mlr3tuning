% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CallbackRushTuning.R
\name{CallbackRushTuning}
\alias{CallbackRushTuning}
\title{Create Rush Tuning Callback}
\description{
Specialized \link[bbotk:CallbackOptimization]{bbotk::CallbackOptimization} for tuning with rush.
Callbacks allow to customize the behavior of processes in mlr3tuning.
The \code{\link[=callback_rush_tuning]{callback_rush_tuning()}} function creates a \link{CallbackRushTuning}.
Predefined callbacks are stored in the \link[mlr3misc:Dictionary]{dictionary} \link{mlr_callbacks} and can be retrieved with \code{\link[=clbk]{clbk()}}.
For more information on tuning callbacks see \code{\link[=callback_tuning]{callback_tuning()}}.
}
\examples{
# write archive to disk
callback_tuning("mlr3tuning.backup",
  on_optimization_end = function(callback, context) {
    saveRDS(context$instance$archive, "archive.rds")
  }
)
}
\section{Super classes}{
\code{\link[mlr3misc:Callback]{mlr3misc::Callback}} -> \code{\link[bbotk:CallbackOptimization]{bbotk::CallbackOptimization}} -> \code{CallbackRushTuning}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{on_eval_after_xs}}{(\verb{function()})\cr
Stage called after xs is passed.
Called in \code{ObjectiveTuning$eval()}.}

\item{\code{on_eval_after_resample}}{(\verb{function()})\cr
Stage called after hyperparameter configurations are evaluated.
Called in \code{ObjectiveTuning$eval()}.}

\item{\code{on_eval_before_archive}}{(\verb{function()})\cr
Stage called before performance values are written to the archive.
Called in \code{ObjectiveTuning$eval()}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CallbackRushTuning-clone}{\code{CallbackRushTuning$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3misc" data-topic="Callback" data-id="call"><a href='../../mlr3misc/html/Callback.html#method-Callback-call'><code>mlr3misc::Callback$call()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3misc" data-topic="Callback" data-id="format"><a href='../../mlr3misc/html/Callback.html#method-Callback-format'><code>mlr3misc::Callback$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3misc" data-topic="Callback" data-id="help"><a href='../../mlr3misc/html/Callback.html#method-Callback-help'><code>mlr3misc::Callback$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3misc" data-topic="Callback" data-id="initialize"><a href='../../mlr3misc/html/Callback.html#method-Callback-initialize'><code>mlr3misc::Callback$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3misc" data-topic="Callback" data-id="print"><a href='../../mlr3misc/html/Callback.html#method-Callback-print'><code>mlr3misc::Callback$print()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CallbackRushTuning-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CallbackRushTuning-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallbackRushTuning$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

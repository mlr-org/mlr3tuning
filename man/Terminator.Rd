% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Terminator.R
\docType{data}
\name{Terminator}
\alias{Terminator}
\title{Abstract Terminator Class}
\format{\link[R6:R6Class]{R6::R6Class} object.}
\description{
Abstract \code{Terminator} class that implements the main functionality each terminator must have.
A terminator is an object that determines when to stop the tuning.

Termination of tuning works as follows:
\itemize{
\item Evaluations in a tuner are performed in batches.
\item Before and after a batch evaluation the \link{Terminator} is checked, if it is positive, we stop.
\item The tuning algorithm itself might decide not to produce any more points, or even might decide to do a smaller batch in its last evaluation.
}

Therefore the following note seems in order:
While it is definitely possible to execute a fine-grained control for termination, and for many tuners we can specify exactly when to stop,
it might happen that a few too many or even a few too few evaluations are performed, especially if the batch size is larger than 1.
So better check the size of the returned archive.
}
\section{Construction}{
\preformatted{t = Terminator$new(param_set = ParamSet$new())
}
\itemize{
\item \code{param_set} :: \link[paradox:ParamSet]{paradox::ParamSet}\cr
Set of control parameters for terminator.
}
}

\section{Fields}{

\itemize{
\item \code{param_set} :: \link[paradox:ParamSet]{paradox::ParamSet}\cr
}
}

\section{Methods}{

\itemize{
\item \code{is_terminated(inst)}\cr
\link{TuningInstance} -> \code{logical(1)}\cr
Is \code{TRUE} iff the termination criterion is positive.
Must be implemented in a subclass.
}
}

\seealso{
Other Terminator: \code{\link{TerminatorClockTime}},
  \code{\link{TerminatorCombo}},
  \code{\link{TerminatorEvals}},
  \code{\link{TerminatorModelTime}},
  \code{\link{TerminatorNone}},
  \code{\link{TerminatorPerfReached}},
  \code{\link{TerminatorStagnation}},
  \code{\link{mlr_terminators}}, \code{\link{mlr_tuners}}
}
\concept{Terminator}
\keyword{datasets}
